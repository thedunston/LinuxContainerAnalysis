#!/usr/bin/bash

# Check if at least one argument was provided
if [ $# -eq 0 ]
then
  echo "Please provide at least one file name as a command line argument."
  exit 1
fi

image_name="linux-malware-analysis"
container_name="${image_name}_$(date +%s)"

# Build podman image if it doesn't exist
if [[ "$(podman images -q $image_name 2> /dev/null)" == "" ]]; then
  podman build -t $image_name .
fi

# Create a temporary tar file
tar_file="$(mktemp)"
tar -cf "$tar_file" "$@"

# Run container
podman run -d --network none --name $container_name \
    --cap-add=SYS_PTRACE \
    --security-opt seccomp=unconfined \
    $image_name

# Wait for container to be ready
echo "Waiting for container to initialize..."
sleep 2

# Copy the tar file to the container
podman cp "$tar_file" "$container_name:/home/app/files.tar"
podman exec "$container_name" tar -xf "/home/app/files.tar" -C "/home/app"
podman exec "$container_name" rm "/home/app/files.tar"

# Make ELF and bash scripts executable
podman exec "$container_name" /bin/sh -c 'find /home/app -type f -exec file {} \; | grep -E "bash script|ELF" | cut -d: -f1 | xargs chmod +x'

# Start file system monitoring
echo "Starting file system monitoring..."
podman exec "$container_name" /usr/local/bin/start-monitoring.sh

podman exec -it $container_name /bin/bash

# After the Docker container has finished running, kill and remove it
podman kill $container_name
podman rm $container_name

# Remove the temporary tar file
rm "$tar_file"
